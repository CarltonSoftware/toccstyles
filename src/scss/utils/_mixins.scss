@mixin ellipsis() {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

@mixin clearfix() {
    &:before,
    &:after{
        content: " "; 
        display: table; 
    }

    &:after{
        display: block;
        clear: both;
        height: 1px;
        margin-top: -1px;
        visibility: hidden;
    }
    &{
        *zoom: 1;
    }
}

@mixin title($size: h1) {
    text-rendering: optimizeLegibility;
    margin: 0;
    padding: 0;
    margin-bottom: $site-global-padding / 2;
    font-size: map-get($site-font-size, $size);
    line-height: map-get($site-font-line-height, $size);
}

@mixin breakpoint($width, $type: min) {
    @if map_has_key($site-breakpoints, $width) {
        $width: map_get($site-breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }

        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

@mixin paragraph() {
    font-size: map-get($site-font-size, p);
    line-height: map-get($site-font-line-height, p);
    color: $site-content-paragraph-font-color;
    font-family: $site-content-paragraph-font-family;
}

@mixin fa() {
    font-family: 'Font Awesome 5 Pro';
    font-weight: 900;
}

@mixin far() {
    font-family: 'Font Awesome 5 Pro';
    font-weight: 400;
}

@mixin fab() {
    font-family: 'Font Awesome 5 Brands';
    font-weight: 400;
}

@mixin bg_extend($background_color: white, $max-width: 1440) {
    background: $background_color;
    position: relative;
    max-width: $max-width * 1px;
    
    &:after,
    &:before {
        background: inherit;
        position: absolute;
        width: calc((#{$max-width}px - 100%) / 2);
        height: 100%;
        content: '';
        display: block;
        top: 0;
    }
    
    &:before {
        left: calc((#{$max-width}px - 100%) / 2 * -1);
    }
    
    &:after {
        right: calc((#{$max-width}px - 100%) / 2 * -1);
    }
}